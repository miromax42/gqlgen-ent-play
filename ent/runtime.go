// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/miromax42/gqlgen-ent-play/ent/schema"
	"github.com/miromax42/gqlgen-ent-play/ent/todo"
	"github.com/miromax42/gqlgen-ent-play/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	todoFields := schema.Todo{}.Fields()
	_ = todoFields
	// todoDescTitle is the schema descriptor for title field.
	todoDescTitle := todoFields[0].Descriptor()
	// todo.DefaultTitle holds the default value on creation for the title field.
	todo.DefaultTitle = todoDescTitle.Default.(string)
	// todoDescDescription is the schema descriptor for description field.
	todoDescDescription := todoFields[1].Descriptor()
	// todo.DefaultDescription holds the default value on creation for the description field.
	todo.DefaultDescription = todoDescDescription.Default.(string)
	// todoDescCreatedAt is the schema descriptor for created_at field.
	todoDescCreatedAt := todoFields[2].Descriptor()
	// todo.DefaultCreatedAt holds the default value on creation for the created_at field.
	todo.DefaultCreatedAt = todoDescCreatedAt.Default.(func() time.Time)
	// todoDescModifiedAt is the schema descriptor for modified_at field.
	todoDescModifiedAt := todoFields[3].Descriptor()
	// todo.DefaultModifiedAt holds the default value on creation for the modified_at field.
	todo.DefaultModifiedAt = todoDescModifiedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
}
